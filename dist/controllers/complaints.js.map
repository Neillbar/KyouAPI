{"version":3,"sources":["../../src/controllers/complaints.js"],"names":["req","res","users","findOne","idNumber","body","loggedBy","findUser","randomID","uniqid","newComplaint","complaintScheme","complaintID","hospID","type","complaintText","progress","complaints","push","attachments","save","savedComplaint","SaveComplaintToUser","status","send","message","ComplaintID","addComplaint","params","compid","findSpeseficComplaint","json","getComplaintByID","mongoose","require","Router","module","exports","config","db","api","post","get"],"mappings":";;;uEAQA,iBAA4BA,GAA5B,EAAgCC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEqBC,MAAMC,OAAN,CAAc,EAACC,UAAUJ,IAAIK,IAAJ,CAASC,QAApB,EAAd,CAFrB;;AAAA;AAEIC,gCAFJ;AAGQC,gCAHR,GAGmBC,QAHnB;AAKQC,oCALR,GAKuB,IAAIC,eAAJ,EALvB;;AAMID,qCAAaE,WAAb,GAA2BJ,QAA3B;AACAE,qCAAaJ,QAAb,GAAwBN,IAAIK,IAAJ,CAASC,QAAjC;AACAI,qCAAaG,MAAb,GAAsBb,IAAIK,IAAJ,CAASQ,MAA/B;AACAH,qCAAaI,IAAb,GAAoBd,IAAIK,IAAJ,CAASS,IAA7B;AACAJ,qCAAaK,aAAb,GAA6Bf,IAAIK,IAAJ,CAASU,aAAtC;AACAL,qCAAaM,QAAb,GAAwBhB,IAAIK,IAAJ,CAASW,QAAjC;AACAT,iCAASU,UAAT,CAAoBC,IAApB,CAAyBV,QAAzB;AACAE,qCAAaS,WAAb,GAA2BnB,IAAIK,IAAJ,CAASc,WAApC;AAbJ;AAAA,+BAc+BT,aAAaU,IAAb,EAd/B;;AAAA;AAcQC,sCAdR;AAAA;AAAA,+BAeoCd,SAASa,IAAT,EAfpC;;AAAA;AAeQE,2CAfR;;AAAA,8BAiBOD,kBAAkBC,mBAjBzB;AAAA;AAAA;AAAA;;AAAA,yDAkBerB,IAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAQ,SAAT,EAAmBC,aAAalB,QAAhC,EAArB,CAlBf;;AAAA;AAAA,yDAqBeP,IAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAQ,qBAAT,EAArB,CArBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeE,Y;;;;;;wEA4Bf,kBAAgC3B,GAAhC,EAAoCC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEkCU,gBAAgBR,OAAhB,CAAwB,EAACS,aAAYZ,IAAI4B,MAAJ,CAAWC,MAAxB,EAAxB,CAFlC;;AAAA;AAEIC,6CAFJ;;AAAA,4BAIIA,qBAJJ;AAAA;AAAA;AAAA;;AAAA,0DAKW7B,IAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAArB,CALX;;AAAA;;AAQAvB,4BAAIsB,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqBD,qBAArB;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeE,gB;;;;;;;AApCf,IAAIC,WAAWC,QAAQ,UAAR,CAAf;;eACiBA,QAAQ,SAAR,C;IAAXC,M,YAAAA,M;;AACN,IAAIxB,kBAAkBuB,QAAQ,6BAAR,CAAtB;AACA,IAAIhC,QAAQgC,QAAQ,wBAAR,CAAZ;AACA,IAAIzB,SAASyB,QAAQ,QAAR,CAAb;AACA,IAAIf,cAAce,QAAQ,8BAAR,CAAlB;;AA8CAE,OAAOC,OAAP,GAAiB,iBAAoB;AAAA,QAAjBC,MAAiB,SAAjBA,MAAiB;AAAA,QAATC,EAAS,SAATA,EAAS;;;AAEjC,QAAIC,MAAML,QAAV;;AAEAK,QAAIC,IAAJ,CAAS,MAAT,EAAgB,UAACzC,GAAD,EAAKC,GAAL,EAAa;AACzB0B,qBAAa3B,GAAb,EAAiBC,GAAjB;AACH,KAFD;;AAIJuC,QAAIE,GAAJ,CAAQ,qBAAR,EAA8B,UAAC1C,GAAD,EAAKC,GAAL,EAAa;AACvC+B,yBAAiBhC,GAAjB,EAAqBC,GAArB;AACH,KAFD;;AAII,WAAOuC,GAAP;AAEH,CAdD","file":"complaints.js","sourcesContent":["var mongoose = require('mongoose');\nvar { Router } = require('express');\nvar complaintScheme = require('../Schemas/complaintsSchema');\nvar users = require('../Schemas/UsersSchema');\nvar uniqid = require('uniqid');\nvar attachments = require('../Schemas/attachmentsSchema');\n\n\nasync function addComplaint(req,res){\n\nlet findUser = await users.findOne({idNumber: req.body.loggedBy});\n    let randomID = uniqid();\n\n    var newComplaint = new complaintScheme();\n    newComplaint.complaintID = randomID;\n    newComplaint.loggedBy = req.body.loggedBy;\n    newComplaint.hospID = req.body.hospID;\n    newComplaint.type = req.body.type;\n    newComplaint.complaintText = req.body.complaintText;\n    newComplaint.progress = req.body.progress;\n    findUser.complaints.push(randomID);\n    newComplaint.attachments = req.body.attachments;\n    let savedComplaint = await newComplaint.save();  \n    let SaveComplaintToUser = await findUser.save();\n\n    if(savedComplaint && SaveComplaintToUser ){\n        return res.status(200).send({message:\"Success\",ComplaintID: randomID});\n\n    }else{\n        return res.status(400).send({message:\"Failure Saving Data\"});\n\n    }\n\n\n}\n\nasync function getComplaintByID(req,res){\n\nlet findSpeseficComplaint = await complaintScheme.findOne({complaintID:req.params.compid});\n\nif(!findSpeseficComplaint){\n    return res.status(400).send(\"No Complaint found\");\n}\n\nres.status(200).json(findSpeseficComplaint);\n\n}\n\n\n\n\nmodule.exports = ({ config, db }) => {\n\n    let api = Router();\n\n    api.post('/add',(req,res) => {\n        addComplaint(req,res);\n    })\n\napi.get('/getOneByID/:compid',(req,res) => {\n    getComplaintByID(req,res)\n})\n\n    return api;\n\n}"]}